version: '3.8'

services:
  backend:
    build: .
    # This service can still be reached on port 9000 directly from the host.
    # The conflicting "8080:8080" mapping is removed. Your app still runs on 8080 INSIDE the container.
    ports:
      - "9000:9000"
    volumes:
      - ./money_tracker.db:/app/money_tracker.db
    env_file:
      - .env
    labels:
      # --- Traefik Labels ---
      - "traefik.enable=true"
      # ⭐️ IMPORTANT: This new label tells Traefik to send traffic to this container's internal port 8080.
      - "traefik.http.services.backend.loadbalancer.server.port=8080"
      - "traefik.http.routers.backend.rule=Host(`money.ensa-ai.com`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"
    restart: unless-stopped

  traefik:
    image: traefik:v2.5
    container_name: traefik
    # ✅ FIXED: Combined the two 'command' blocks into a single, valid command.
    command:
      - /bin/sh
      - -c
      - |
        touch /acme.json
        chmod 600 /acme.json
        traefik \
          --api.insecure=true \
          --providers.docker=true \
          --entryPoints.web.address=:80 \
          --entryPoints.websecure.address=:443 \
          --certificatesResolvers.myresolver.acme.tlsChallenge=true \
          --certificatesResolvers.myresolver.acme.email=your-email@example.com \
          --certificatesResolvers.myresolver.acme.storage=/acme.json
    ports:
      - "80:80"   # For web traffic and Let's Encrypt
      - "443:443" # For secure web traffic
      # This port is for the Traefik dashboard. Since the conflict is resolved, it can stay on 8080.
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./acme.json:/acme.json"
    restart: unless-stopped